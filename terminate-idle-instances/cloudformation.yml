AWSTemplateFormatVersion: 2010-09-09

Parameters:

  ComputeEnvironmentArn:
    Type: String

Resources:

  DeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref AWS::StackName
      MessageRetentionPeriod: 1209600

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}"
      RetentionInDays: 30

  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref AWS::StackName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: lambda.amazonaws.com
          Effect: Allow
      Policies:
      - PolicyName: policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !GetAtt LogGroup.Arn
          - Effect: Allow
            Action: sqs:SendMessage
            Resource: !GetAtt DeadLetterQueue.Arn
          - Effect: Allow
            Action:
            - ec2:*
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:*"

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref AWS::StackName
      Code: src/
      DeadLetterConfig:
        TargetArn: !GetAtt DeadLetterQueue.Arn
      Handler: main.lambda_handler
      MemorySize: 128
      Role: !GetAtt Role.Arn
      Runtime: python3.7
      Timeout: 30

  EventInvokeConfig:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName: !Ref Lambda
      Qualifier: $LATEST
      MaximumRetryAttempts: 0

  Schedule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Ref AWS::StackName
      ScheduleExpression: "rate(2 minutes)"
      Targets:
      - Arn: !GetAtt Lambda.Arn
        Id: lambda
        Input: !Sub |-
          {
            "ComputeEnvironmentArn": "${ComputeEnvironmentArn}"
          }

  EventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Lambda.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt Schedule.Arn
