name: Deploy to AWS

on:
  push:
    branches:
    - master
    - develop
    - asj-zappa

env:
  AWS_REGION: us-west-2
  TEMPLATE_BUCKET: cf-templates-aubvn3i9olmk-us-west-2
  RTC_GAMMA_REPOSITORY: 845172464411.dkr.ecr.us-west-2.amazonaws.com/rtc-gamma

  VPC_ID: ${{ secrets.VPC_ID }}
  EDL_USERNAME: ${{ secrets.EDL_USERNAME }}
  EDL_PASSWORD: ${{ secrets.EDL_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CLOUDFORMATION_ROLE_ARN: ${{ secrets.CLOUDFORMATION_ROLE_ARN }}

jobs:

  deploy-batch-cluster:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - run: |
        aws cloudformation package \
          --template-file batch-cluster/cloudformation.yml \
          --s3-bucket ${TEMPLATE_BUCKET} \
          --output-template-file packaged.yml
        aws cloudformation deploy \
          --stack-name hyp3-${GITHUB_REF##*/} \
          --template-file packaged.yml \
          --role-arn ${CLOUDFORMATION_ROLE_ARN} \
          --capabilities CAPABILITY_NAMED_IAM \
          --parameter-overrides \
              VpcId=${VPC_ID} \
              EDLUsername=${EDL_USERNAME} \
              EDLPassword=${EDL_PASSWORD} \
              RtcGammaImage=${RTC_GAMMA_REPOSITORY}:${GITHUB_REF##*/}

  deploy-api:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - env:
        JOB_QUEUE: myQueue2
        JOB_DEFINITION: myJobDefinition
      run: |
        python -m pip install --upgrade pip
        pip install zappa
        python -m venv venv
        . ./venv/bin/activate
        pip install -r api/requirements.txt
        envsubst < api/zappa_settings_template.yml > zappa_settings.yml

    - run: |
        zappa deploy asjzappa
