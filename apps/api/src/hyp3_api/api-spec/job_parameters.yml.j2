components:
  schemas:
    job_type:
      description: Type of process to run this job.
      type: string
      example: {{ job_types.__iter__().__next__() }}
      enum:
        {% for job_type in job_types.keys() %}
        - {{ job_type }}
        {% endfor %}

    job_definitions:
      oneOf:
        {% for job_type in job_types %}
        - $ref: "#/components/schemas/{{ job_type }}JobDefinition"
        {% endfor %}

    job_parameters:
      oneOf:
        {% for job_type in job_types %}
        - $ref: "#/components/schemas/{{ job_type }}"
        {% endfor %}

    {% for job_type, job_spec in job_types.items() %}
    {{ job_type }}JobDefinition:
      allOf:
        - $ref: "#/components/schemas/{{ job_type }}"
          {% for parameter in job_spec.get('required_parameters', []) %}
          {% if loop.first %}
        - anyOf:
            - type: object
              required:
              {% endif %}
                - {{ parameter }}
              {% endfor %}
              {% for parameter in job_spec.get('required_parameters', []) %}
              {% if loop.first %}
              properties:
              {% endif %}
                {{ parameter }}:
                  {{ json.dumps(job_spec['parameters'][parameter]['api_schema']) }}
              {% endfor %}
            {% endfor %}


    {% for job_type, job_spec in job_types.items() %}
    {{ job_type }}:
      description: Parameters for running {{ job_type }} jobs
      type: object
      {% for parameter, parameter_spec in job_spec['parameters'].items() if 'api_schema' in parameter_spec and parameter not in job_spec.get('required_parameters', []) %}
      {% if loop.first %}
      properties:
      {% endif %}
        {{ parameter }}:
          {{ json.dumps(parameter_spec['api_schema']) }}
      {% endfor %}
    {% endfor %}
