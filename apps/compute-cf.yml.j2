AWSTemplateFormatVersion: 2010-09-09

Parameters:

  VpcId:
    Type: AWS::EC2::VPC::Id

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

  MaxvCpus:
    Type: Number
    MinValue: 0

  ContentBucket:
    Type: String

Outputs:

  ComputeEnvironmentArn:
    Value: !Ref ComputeEnvironment

  JobQueueArn:
    Value: !Ref BatchJobQueue

  TaskRoleArn:
    Value: !GetAtt TaskRole.Arn

  SecurityGroupId:
    Value: !Ref SecurityGroup

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Security group for ${AWS::StackName} machines"
      VpcId: !Ref VpcId

  ComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ServiceRole: !GetAtt BatchServiceRole.Arn
      Type: MANAGED
      ComputeResources:
        Type: FARGATE_SPOT
        MaxvCpus: !Ref MaxvCpus
        Subnets: !Ref SubnetIds
        SecurityGroupIds:
          - !Ref SecurityGroup

  SchedulingPolicy:
    Type: AWS::Batch::SchedulingPolicy

  BatchJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      Priority: 1
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref ComputeEnvironment
          Order: 1
      SchedulingPolicyArn: !Ref SchedulingPolicy

  TaskRole:
    Type: {{ 'Custom::JplRole' if security_environment in ('JPL', 'JPL-public') else 'AWS::IAM::Role' }}
    Properties:
      {% if security_environment in ('JPL', 'JPL-public') %}
      ServiceToken: !ImportValue Custom::JplRole::ServiceToken
      Path: /account-managed/hyp3/
      {% endif %}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: ecs-tasks.amazonaws.com
          Effect: Allow
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - !Ref TaskPolicy

  TaskPolicy:
    Type: {{ 'Custom::JplPolicy' if security_environment in ('JPL', 'JPL-public') else 'AWS::IAM::ManagedPolicy' }}
    Properties:
      {% if security_environment in ('JPL', 'JPL-public') %}
      ServiceToken: !ImportValue Custom::JplPolicy::ServiceToken
      Path: /account-managed/hyp3/
      {% endif %}
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: s3:PutObject
            Resource: !Sub "arn:aws:s3:::${ContentBucket}/*"
          - Effect: Allow
            Action: s3:PutObjectTagging
            Resource: !Sub "arn:aws:s3:::${ContentBucket}/*"

  BatchServiceRole:
    Type: {{ 'Custom::JplRole' if security_environment in ('JPL', 'JPL-public') else 'AWS::IAM::Role' }}
    Properties:
      {% if security_environment in ('JPL', 'JPL-public') %}
      ServiceToken: !ImportValue Custom::JplRole::ServiceToken
      Path: /account-managed/hyp3/
      {% endif %}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: batch.amazonaws.com
          Effect: Allow
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
